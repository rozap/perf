var _user$project$Main$urlUpdate = F2(
	function (result, model) {
		var _p0 = A2(_elm_lang$core$Debug$log, 'result', result);
		if (_p0.ctor === 'Err') {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				model,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$navigation$Navigation$modifyUrl(
						_user$project$Router$pageToRoute(model.page))
					]));
		} else {
			var _p2 = _p0._0;
			var newModel = _elm_lang$core$Native_Utils.update(
				model,
				{page: _p2});
			var _p1 = _p2;
			if (_p1.ctor === 'SuitesPage') {
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						newModel,
						{
							suites: A2(_user$project$Suites$urlUpdate, _p2, newModel.suites)
						}),
					_elm_lang$core$Native_List.fromArray(
						[]));
			} else {
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					newModel,
					_elm_lang$core$Native_List.fromArray(
						[]));
			}
		}
	});
var _user$project$Main$Model = F5(
	function (a, b, c, d, e) {
		return {suites: a, suite: b, page: c, socket: d, channel: e};
	});
var _user$project$Main$ShowLeftMessage = function (a) {
	return {ctor: 'ShowLeftMessage', _0: a};
};
var _user$project$Main$ShowJoinedMessage = function (a) {
	return {ctor: 'ShowJoinedMessage', _0: a};
};
var _user$project$Main$PhoenixMsg = function (a) {
	return {ctor: 'PhoenixMsg', _0: a};
};
var _user$project$Main$initSocket = function () {
	var channel = A2(
		_fbonetti$elm_phoenix_socket$Phoenix_Channel$onClose,
		_elm_lang$core$Basics$always(
			_user$project$Main$ShowLeftMessage('left api')),
		A2(
			_fbonetti$elm_phoenix_socket$Phoenix_Channel$onJoin,
			_elm_lang$core$Basics$always(
				_user$project$Main$ShowJoinedMessage('joined api')),
			_fbonetti$elm_phoenix_socket$Phoenix_Channel$init('api')));
	var socket = _fbonetti$elm_phoenix_socket$Phoenix_Socket$withDebug(
		_fbonetti$elm_phoenix_socket$Phoenix_Socket$init('ws://localhost:4000/socket/websocket'));
	var _p3 = A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$join, channel, socket);
	var sock = _p3._0;
	var cmd = _p3._1;
	return {
		ctor: '_Tuple3',
		_0: sock,
		_1: channel,
		_2: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Main$PhoenixMsg, cmd)
	};
}();
var _user$project$Main$initialState = function () {
	var _p4 = _user$project$Main$initSocket;
	var socket = _p4._0;
	var channel = _p4._1;
	var cmd = _p4._2;
	return {
		ctor: '_Tuple2',
		_0: {suites: _user$project$Suites$model, page: _user$project$Router$SuitesPage, suite: _elm_lang$core$Maybe$Nothing, socket: socket, channel: channel},
		_1: cmd
	};
}();
var _user$project$Main$init = function (result) {
	var _p5 = _user$project$Main$initialState;
	var preModel = _p5._0;
	var phxCmd = _p5._1;
	var _p6 = A2(_user$project$Main$urlUpdate, result, preModel);
	var model = _p6._0;
	var urlCmd = _p6._1;
	return {
		ctor: '_Tuple2',
		_0: model,
		_1: _elm_lang$core$Platform_Cmd$batch(
			_elm_lang$core$Native_List.fromArray(
				[phxCmd, urlCmd]))
	};
};
var _user$project$Main$subscriptions = function (model) {
	return A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$listen, model.socket, _user$project$Main$PhoenixMsg);
};
var _user$project$Main$SuitesAction = function (a) {
	return {ctor: 'SuitesAction', _0: a};
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p7 = A2(_elm_lang$core$Debug$log, 'msg', msg);
		switch (_p7.ctor) {
			case 'SuitesAction':
				var _p8 = A2(_user$project$Suites$update, _p7._0, model.suites);
				var suiteState = _p8._0;
				var suiteCmd = _p8._1;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{suites: suiteState}),
					_elm_lang$core$Native_List.fromArray(
						[
							A2(_elm_lang$core$Platform_Cmd$map, _user$project$Main$SuitesAction, suiteCmd)
						]));
			case 'PhoenixMsg':
				var _p9 = A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$update, _p7._0, model.socket);
				var socket = _p9._0;
				var phxCmd = _p9._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{socket: socket}),
					_1: A2(
						_elm_lang$core$Platform_Cmd$map,
						_user$project$Main$PhoenixMsg,
						A2(_elm_lang$core$Debug$log, 'phxCmd', phxCmd))
				};
			case 'ShowJoinedMessage':
				var foo = A2(_elm_lang$core$Debug$log, 'joined channel', _p7._0);
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					model,
					_elm_lang$core$Native_List.fromArray(
						[]));
			default:
				var foo = A2(_elm_lang$core$Debug$log, 'left channel', _p7._0);
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					model,
					_elm_lang$core$Native_List.fromArray(
						[]));
		}
	});
var _user$project$Main$viewForRoute = function (model) {
	var _p10 = model.page;
	if (_p10.ctor === 'SuitesPage') {
		return A2(
			_elm_lang$html$Html_App$map,
			function (action) {
				return _user$project$Main$SuitesAction(action);
			},
			_user$project$Suites$listView(model.suites));
	} else {
		return A2(
			_elm_lang$html$Html_App$map,
			function (action) {
				return _user$project$Main$SuitesAction(action);
			},
			_user$project$Suites$singleView(model.suite));
	}
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$Main$viewForRoute(model)
			]));
};
var _user$project$Main$main = {
	main: A2(
		_elm_lang$navigation$Navigation$program,
		_elm_lang$navigation$Navigation$makeParser(_user$project$Router$urlParser),
		{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, urlUpdate: _user$project$Main$urlUpdate, subscriptions: _user$project$Main$subscriptions})
};
